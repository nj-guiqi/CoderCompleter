{"prefix": "package me.devnatan.inventoryframework.runtime;\n\nimport me.devnatan.inventoryframework.View;\nimport me.devnatan.inventoryframework.ViewFrame;\nimport me.devnatan.inventoryframework.context.CloseContext;\nimport me.devnatan.inventoryframework.context.OpenContext;\nimport org.bukkit.Bukkit;\nimport org.bukkit.plugin.java.JavaPlugin;\nimport org.jetbrains.annotations.NotNull;\n\npublic final class InventoryFramework extends JavaPlugin {\n\n    public static final String LIBRARY_VERSION = \"3.0.9\";\n\n    @Override\n    public void onEnable() {\n        ViewFrame.create(this).enableDebug().with(new A(), new B()).register();\n", "suffix": "        Bukkit.broadcastMessage(\"[A] onClose\");\n    }\n}\n\nclass B extends View {\n\n    @Override\n    public void onOpen(@NotNull OpenContext open) {\n        Bukkit.broadcastMessage(\"[B] onOpen\");\n    }\n\n    @Override\n    public void onClose(@NotNull CloseContext close) {\n        Bukkit.broadcastMessage(\"[B] onClose\");\n    }\n}\n", "reference_code": "    }\n}\n\nclass A extends View {\n\n    @Override\n    public void onOpen(@NotNull OpenContext open) {\n        Bukkit.broadcastMessage(\"[A] onOpen\");\n    }\n\n    @Override\n    public void onClose(@NotNull CloseContext close) {\n"}
{"prefix": "package ro.unibuc.hello.services;\n\npublic class TaxCalculator {\n    private double salary;\n    private double dividends;\n    private double rentalIncome;\n    private Boolean hasDiploma;\n    private Boolean optsForFoodTickets;\n\n    public TaxCalculator(double salary, double dividends, double rentalIncome, Boolean hasDiploma, Boolean optsForFoodTickets) {\n//        if (salary.equals(null) || dividends.equals(null) || rentalIncome.equals(null) || hasDiploma.equals(null) || optsForFoodTickets.equals(null)) {\n//            throw new IllegalArgumentException(\"None of the arguments can be null\");\n//        }\n        if (salary < 0 || dividends < 0 || rentalIncome < 0) {\n            throw new IllegalArgumentException(\"Income values cannot be negative\");\n        }\n        this.salary = salary;\n        this.dividends = dividends;\n        this.rentalIncome = rentalIncome;\n        this.hasDiploma = hasDiploma;\n        this.optsForFoodTickets = optsForFoodTickets;\n    }\n\n    public double calculateTax() {\n        double totalTax = 0;\n\n        // Salary tax calculation\n        double taxableSalary = optsForFoodTickets ? salary * 0.8 : salary;\n        if (taxableSalary > 6000) {\n            totalTax += (taxableSalary - 6000) * 0.4 + 3000 * 0.2;\n", "suffix": "}\n", "reference_code": "        } else if (taxableSalary > 3000) {\n            totalTax += (taxableSalary - 3000) * 0.2;\n        }\n\n        // Income tax calculation\n        if (!hasDiploma) {\n            totalTax += taxableSalary * 0.1;\n        }\n\n        // Dividends tax calculation\n        totalTax += dividends * 0.08;\n        if (dividends > 10000) {\n            totalTax += 1000;\n        }\n\n        // Rental income tax calculation\n        totalTax += rentalIncome * 0.15;\n\n        return totalTax;\n    }\n\n"}